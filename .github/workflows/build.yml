name: Publish

on:
  push:
    tags:
      - v*
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }} 
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            asset_name: linux.zip
          - os: macos-latest
            asset_name: darwin.zip
            PYTHON_VERSION: 3.9.1
            MACOSX_DEPLOYMENT_TARGET: 10.9
          - os: windows-latest
            asset_name: win32.zip
    environment: build
    env:
      PYTHON_VERSION: ${{ matrix.PYTHON_VERSION }}
      MACOSX_DEPLOYMENT_TARGET: ${{ matrix.MACOSX_DEPLOYMENT_TARGET }}
    steps:
    - name: echo matrix
      run: echo "${{ matrix.os }}"
    - uses: actions/checkout@v2
    - name: Set up Python 3.8 x86
      uses: actions/setup-python@v2
      if: matrix.os == 'windows-latest'
      with:
        python-version: 3.8
        architecture: 'x86'
    - name: Set up Python 3.8 x64
      uses: actions/setup-python@v2
      if: ${{ matrix.os == 'ubuntu-latest' }}
      with:
        python-version: 3.8
        architecture: 'x64'
    - name: Set up Python for macOS
      if: ${{ matrix.os == 'macos-latest' }}
      run: |
        curl https://www.python.org/ftp/python/${{ matrix.PYTHON_VERSION }}/python-${{ matrix.PYTHON_VERSION }}-macosx10.9.pkg -o "python.pkg"
        sudo installer -pkg python.pkg -target /
        echo "/Library/Frameworks/Python.framework/Versions/3.9/bin" >> $GITHUB_PATH
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip3 install -r requirements.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Build
      run: |
        pyinstaller src/main.py --onedir
        python3 -c "import shutil; shutil.make_archive('dist/main', 'zip', 'dist/main')"
    - name: Upload executable as artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.asset_name }}
        path: ${{ github.workspace }}/dist/main.zip
    - name: upload executable to github tag
      uses: svenstaro/upload-release-action@v2
      if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
      with:
        repo_token: ${{ secrets.OAUTH_TOKEN }}
        file: ${{ github.workspace }}/dist/main.zip
        asset_name: ${{ matrix.asset_name }}
        tag: ${{ github.ref }}
